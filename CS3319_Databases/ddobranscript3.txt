use ddobrandb;

# Show the last name of all professors
select lastName from Instructors;

# Show the first and last name of all students who have a head
# supervisor with the first name "Mike"
select t.firstName, t.lastName
from TAs t
inner join Instructors i
on i.instID=t.instID
and i.firstName = 'Mike';

#List all the t.a.s firstname, lastname, type of grad  of the t.a.s
# who are doing a PhD in order by the t.a.s first name
select firstName, lastName, type from TAs
where type='PhD'
order by firstName;

# List all second year courses (all fields, second year courses
# start with CS2..)
select * from Courses
where courseNumber like 'CS2%';

# List the firstname of the t.a and the name of the course they
# were a teaching assistant for, for any t.a.s who were a
# teaching assistant for a course given in the Fall
select ta.firstName, c.courseName
from TAs ta
inner join TAassignedToCourse tac
	on ta.taID = tac.taID
inner join CourseInfo ci
	on tac.courseNumber = ci.courseNumber
inner join Courses c
	on c.courseNumber = ci.courseNumber
where ci.term = 'Fall';

# List the firstname of the teaching assistant and the first and last
# name of the teaching assistants head supervisor.
select t.firstName, i.firstName, i.lastName
from TAs t, Instructors i
where t.instID = i.instID;

# List the first and last name of any instructors that don't head supevisor anyone
select Instructors.firstName, Instructors.lastName
from Instructors
where instID not in (
	select distinct t.instID
	from TAs t
);

# List the first and last name of any instructors who dont head OR
# co supervise anyone
select i.firstName, i.lastName
from Instructors i
where instID not in (
	select distinct t.instID
	from TAs t
	union
	select distinct cos.instID
	from CoSupervisors cos
);

# Count the number of teaching assistants who are PhD student,
# display that number
select count(type) as numPhDStudents from TAs
where type = 'PhD';

# List the course number and course name and their t.a.s first and
# last names if they have a t.a. for any first year courses,
# if they didnt have a t.a. just put null for these fields
select c.courseNumber, c.courseName, t.firstName, t.lastName
from (
	select courseNumber, courseName
	from Courses
	where courseNumber like 'CS1%'
	) as c
inner join TAassignedToCourse tac
	on tac.courseNumber=c.courseNumber
left outer join TAs t
	on t.taID=tac.taID;

# Find the total number of teaching assistants used for each year,
# list the year and the count for that year.
select a.year, count(*) as numTAs
from (
	select distinct year, taId
	from CourseInfo ci
	left join TAassignedToCourse tac
		on ci.courseNumber = tac.courseNumber
	) as a
group by year;

# List any year that had less than 5 teaching assistants that year,
# you just need to list the year, not the count.
select a.year, count(*) as numTAs
from (
	select distinct year, taId
	from CourseInfo ci
	left join TAassignedToCourse tac
		on ci.courseNumber = tac.courseNumber
	) as a
group by year
having count(*) < 5;

# List the first name of any students that Doug Vancise either head
# supervises or co-supervises
select distinct t.firstName
	from TAs t
	where t.instID in (
		select instID from Instructors
	 	where firstName = 'Doug' and lastName='Vancise')
union
	select tt.firstName
		from TAs tt
		where tt.taID in (
			select taID from CoSupervisors
			where instID in (
				select instID from Instructors
	 			where firstName = 'Doug' and lastName='Vancise'
	 		)
	 	);